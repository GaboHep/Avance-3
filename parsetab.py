
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'APPEND CASE COMMA COMPARE DIVIDE DOTCOMA ELSE EQUALS EQUALSVAR FLOAT FOR FUNC ID IF IMPORT INT INTERFACE LBRACKETS LCURLY LEN LPAREN MAIN MINUS MINUSTHAN MORETHAN NEW PACKAGE PERIOD PI PLUS POW PRINT PRINTF PUSH RBRACKETS RCURLY RETURN RPAREN STACK STR STRUCT SWITCH TIMES TWODOTS TYPE VAR WHILE XCENTAGEprogram : repeatLinesvalue : INT \n  | FLOAT \n  | STR\n  | IDrepeatLines : line\n                     | line repeatLines\n            \n    \n    line : ID EQUALSVAR value\n      | stamentFor\n       | consulta \n       | push\n       | funcion\n       | array\n       | slice\n       | mathExpProd\n       | CASE INT TWODOTS line \n       | switch\n       | pila\n       | func_declaration\n       | ID EQUALSVAR INT\n       | retorno\n       | declaration\n    \n    retorno : ID\n    | ID COMMA\n    | RETURN retorno\n    expression : ID comparator ID\n    | ID comparator INT \n    | ID\n  comparator : COMPARE\n    | MORETHAN\n    | MINUSTHAN\n  operator : DIVIDE\n  | MINUS\n  | PLUS\n  | TIMES\n  stamentFor : FOR ID EQUALS INT DOTCOMA ID MINUSTHAN LEN LPAREN ID RPAREN DOTCOMA ID PLUS PLUS LCURLY repeatLines RCURLY\n  \n  switch : SWITCH ID LCURLY repeatLines RCURLY\n  \n  consulta : IF expression LCURLY statements RCURLY\n  consulta : IF expression LCURLY statements RCURLY ELSE LCURLY statements RCURLYstatements : statement\n  | statement COMMA statements\n   statement : ID \n  number : INT\n            | FLOAT\n        array : ID EQUALSVAR LBRACKETS INT RBRACKETS ID LCURLY elemArray RCURLY\n    elemArray : number \n                 | number COMMA elemArray\n    slice : ID EQUALSVAR LBRACKETS RBRACKETS ID LCURLY elemSlice RCURLY\n  elemSlice : number \n                 | number COMMA elemSlice\n  \n    pila : TYPE STACK LBRACKETS RBRACKETS ID\n    | TYPE STACK INTERFACE LCURLY RCURLY\n    | TYPE STACK STRUCT LCURLY ID LBRACKETS RBRACKETS value RCURLY\n    \n    push : FUNC PUSH LPAREN ID STACK COMMA ID ID RPAREN STACK LCURLY RETURN APPEND LPAREN ID COMMA ID RPAREN RCURLY\n    funcion : FUNC value LPAREN RPAREN ID LCURLY repeatLines RETURN ID RCURLY\n      \n    func_declaration : FUNC ID LPAREN RPAREN LPAREN return_types RPAREN LCURLY repeatLines RCURLY\n    \n    return_types : ID COMMA ID\n                 | ID\n    funcion : FUNC ID LPAREN param_list RPAREN ID LCURLY repeatLines RETURN ID RCURLYparam_list : param\n                  | param_list COMMA param\n    param : value ID \n    declaration : VAR ID ID\n  | VAR ID ID EQUALSVAR number\n  | VAR ID ID EQUALSVAR STRmathExp : number\n  | number operator number\n  mathExpProd : mathExp\n  | mathExp operator mathExpProd\n  '
    
_lr_action_items = {'ID':([0,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,30,31,39,40,41,42,43,51,53,54,55,57,59,60,61,62,63,64,65,67,68,72,73,75,76,87,88,90,92,94,96,97,98,100,101,102,105,106,107,109,110,116,121,127,128,129,130,133,136,143,144,146,149,150,152,155,160,161,164,165,170,173,174,177,179,],[4,4,-23,-9,-10,-11,-12,-13,-14,-15,-43,-17,-18,-19,-21,-22,33,35,37,43,-68,49,51,-66,-44,53,-24,-2,-3,-4,-25,-23,72,-5,-8,-2,4,80,81,-29,-30,-31,83,53,-69,4,-63,-67,95,-16,103,104,106,108,111,113,-38,80,117,53,119,-37,-51,-52,-64,-65,128,4,80,140,4,142,53,-48,4,154,-45,157,-39,159,-53,-56,-55,-59,167,172,4,176,-36,-54,]),'CASE':([0,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,23,27,28,31,40,41,42,43,53,54,55,57,67,68,72,73,76,97,105,106,107,109,110,121,129,136,143,146,150,155,160,161,164,173,177,179,],[12,12,-23,-9,-10,-11,-12,-13,-14,-15,-43,-17,-18,-19,-21,-22,-68,-66,-44,-24,-3,-4,-25,-23,-5,-8,-2,12,-69,12,-63,-67,-16,-38,-37,-51,-52,-64,-65,12,12,-48,12,-45,-39,-53,-56,-55,-59,12,-36,-54,]),'FOR':([0,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,23,27,28,31,40,41,42,43,53,54,55,57,67,68,72,73,76,97,105,106,107,109,110,121,129,136,143,146,150,155,160,161,164,173,177,179,],[19,19,-23,-9,-10,-11,-12,-13,-14,-15,-43,-17,-18,-19,-21,-22,-68,-66,-44,-24,-3,-4,-25,-23,-5,-8,-2,19,-69,19,-63,-67,-16,-38,-37,-51,-52,-64,-65,19,19,-48,19,-45,-39,-53,-56,-55,-59,19,-36,-54,]),'IF':([0,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,23,27,28,31,40,41,42,43,53,54,55,57,67,68,72,73,76,97,105,106,107,109,110,121,129,136,143,146,150,155,160,161,164,173,177,179,],[20,20,-23,-9,-10,-11,-12,-13,-14,-15,-43,-17,-18,-19,-21,-22,-68,-66,-44,-24,-3,-4,-25,-23,-5,-8,-2,20,-69,20,-63,-67,-16,-38,-37,-51,-52,-64,-65,20,20,-48,20,-45,-39,-53,-56,-55,-59,20,-36,-54,]),'FUNC':([0,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,23,27,28,31,40,41,42,43,53,54,55,57,67,68,72,73,76,97,105,106,107,109,110,121,129,136,143,146,150,155,160,161,164,173,177,179,],[21,21,-23,-9,-10,-11,-12,-13,-14,-15,-43,-17,-18,-19,-21,-22,-68,-66,-44,-24,-3,-4,-25,-23,-5,-8,-2,21,-69,21,-63,-67,-16,-38,-37,-51,-52,-64,-65,21,21,-48,21,-45,-39,-53,-56,-55,-59,21,-36,-54,]),'SWITCH':([0,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,23,27,28,31,40,41,42,43,53,54,55,57,67,68,72,73,76,97,105,106,107,109,110,121,129,136,143,146,150,155,160,161,164,173,177,179,],[24,24,-23,-9,-10,-11,-12,-13,-14,-15,-43,-17,-18,-19,-21,-22,-68,-66,-44,-24,-3,-4,-25,-23,-5,-8,-2,24,-69,24,-63,-67,-16,-38,-37,-51,-52,-64,-65,24,24,-48,24,-45,-39,-53,-56,-55,-59,24,-36,-54,]),'TYPE':([0,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,23,27,28,31,40,41,42,43,53,54,55,57,67,68,72,73,76,97,105,106,107,109,110,121,129,136,143,146,150,155,160,161,164,173,177,179,],[25,25,-23,-9,-10,-11,-12,-13,-14,-15,-43,-17,-18,-19,-21,-22,-68,-66,-44,-24,-3,-4,-25,-23,-5,-8,-2,25,-69,25,-63,-67,-16,-38,-37,-51,-52,-64,-65,25,25,-48,25,-45,-39,-53,-56,-55,-59,25,-36,-54,]),'RETURN':([0,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,22,23,27,28,29,31,40,41,42,43,53,54,55,57,67,68,72,73,76,97,105,106,107,109,110,121,129,132,136,141,143,146,150,155,160,161,163,164,173,177,179,],[22,22,-23,-9,-10,-11,-12,-13,-14,-15,-43,-17,-18,-19,-21,-22,22,-68,-66,-44,-7,-24,-3,-4,-25,-23,-5,-8,-2,22,-69,22,-63,-67,-16,-38,-37,-51,-52,-64,-65,22,22,144,-48,152,22,-45,-39,-53,-56,-55,166,-59,22,-36,-54,]),'VAR':([0,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,23,27,28,31,40,41,42,43,53,54,55,57,67,68,72,73,76,97,105,106,107,109,110,121,129,136,143,146,150,155,160,161,164,173,177,179,],[26,26,-23,-9,-10,-11,-12,-13,-14,-15,-43,-17,-18,-19,-21,-22,-68,-66,-44,-24,-3,-4,-25,-23,-5,-8,-2,26,-69,26,-63,-67,-16,-38,-37,-51,-52,-64,-65,26,26,-48,26,-45,-39,-53,-56,-55,-59,26,-36,-54,]),'INT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,23,27,28,30,31,40,41,42,43,44,45,46,47,48,52,53,54,55,56,57,58,60,61,62,63,65,67,68,72,73,76,93,97,101,105,106,107,109,110,112,121,123,129,133,136,137,143,146,147,150,155,160,161,164,173,177,179,],[13,13,-23,-9,-10,-11,-12,-13,-14,-15,32,-43,-17,-18,-19,-21,-22,39,-68,-66,-44,55,-24,-3,-4,-25,-23,13,-32,-33,-34,-35,13,-5,-8,-2,74,13,77,82,-29,-30,-31,39,-69,13,-63,-67,-16,13,-38,39,-37,-51,-52,-64,-65,13,13,13,13,39,-48,13,13,-45,13,-39,-53,-56,-55,-59,13,-36,-54,]),'FLOAT':([0,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,21,23,27,28,30,31,40,41,42,43,44,45,46,47,48,52,53,54,55,57,65,67,68,72,73,76,93,97,101,105,106,107,109,110,112,121,123,129,133,136,137,143,146,147,150,155,160,161,164,173,177,179,],[28,28,-23,-9,-10,-11,-12,-13,-14,-15,-43,-17,-18,-19,-21,-22,40,-68,-66,-44,40,-24,-3,-4,-25,-23,28,-32,-33,-34,-35,28,-5,-8,-2,28,40,-69,28,-63,-67,-16,28,-38,40,-37,-51,-52,-64,-65,28,28,28,28,40,-48,28,28,-45,28,-39,-53,-56,-55,-59,28,-36,-54,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,23,27,28,29,31,40,41,42,43,53,54,55,67,72,73,76,97,105,106,107,109,110,136,146,150,155,160,161,164,177,179,],[0,-1,-6,-23,-9,-10,-11,-12,-13,-14,-15,-43,-17,-18,-19,-21,-22,-68,-66,-44,-7,-24,-3,-4,-25,-23,-5,-8,-2,-69,-63,-67,-16,-38,-37,-51,-52,-64,-65,-48,-45,-39,-53,-56,-55,-59,-36,-54,]),'RCURLY':([3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,23,27,28,29,31,39,40,41,42,43,53,54,55,67,72,73,76,78,79,80,89,91,97,105,106,107,109,110,115,124,125,134,135,136,139,145,146,148,150,153,154,155,156,159,160,161,164,175,177,178,179,],[-6,-23,-9,-10,-11,-12,-13,-14,-15,-43,-17,-18,-19,-21,-22,-68,-66,-44,-7,-24,-2,-3,-4,-25,-23,-5,-8,-2,-69,-63,-67,-16,97,-40,-42,105,107,-38,-37,-51,-52,-64,-65,-41,136,-49,146,-46,-48,150,155,-45,-50,-39,160,161,-53,-47,164,-56,-55,-59,177,-36,179,-54,]),'EQUALSVAR':([4,72,],[30,93,]),'COMMA':([4,13,28,43,79,80,84,86,99,103,118,119,125,135,172,],[31,-43,-44,31,98,-42,101,-60,116,-62,-61,130,137,147,174,]),'DIVIDE':([13,23,27,28,73,],[-43,45,45,-44,-67,]),'MINUS':([13,23,27,28,73,],[-43,46,46,-44,-67,]),'PLUS':([13,23,27,28,73,167,169,],[-43,47,47,-44,-67,169,171,]),'TIMES':([13,23,27,28,73,],[-43,48,48,-44,-67,]),'PUSH':([21,],[36,]),'STR':([21,30,65,93,101,133,],[41,41,41,110,41,41,]),'STACK':([25,83,151,],[50,99,158,]),'LBRACKETS':([30,50,108,],[56,69,122,]),'TWODOTS':([32,],[57,]),'EQUALS':([33,],[58,]),'LCURLY':([34,35,49,70,71,81,82,95,104,111,114,117,131,158,171,],[59,-28,68,91,92,-26,-27,112,121,123,127,129,143,163,173,]),'COMPARE':([35,],[61,]),'MORETHAN':([35,],[62,]),'MINUSTHAN':([35,113,],[63,126,]),'LPAREN':([36,37,38,39,40,41,85,138,168,],[64,65,66,-2,-3,-4,102,149,170,]),'INTERFACE':([50,],[70,]),'STRUCT':([50,],[71,]),'RBRACKETS':([56,69,74,122,],[75,90,94,133,]),'RPAREN':([65,66,84,86,103,118,119,120,140,142,157,176,],[85,88,100,-60,-62,-61,-58,131,151,-57,162,178,]),'DOTCOMA':([77,162,],[96,165,]),'ELSE':([97,],[114,]),'LEN':([126,],[138,]),'APPEND':([166,],[168,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'repeatLines':([0,3,68,121,129,143,173,],[2,29,89,132,141,153,175,]),'line':([0,3,57,68,121,129,143,173,],[3,3,76,3,3,3,3,3,]),'stamentFor':([0,3,57,68,121,129,143,173,],[5,5,5,5,5,5,5,5,]),'consulta':([0,3,57,68,121,129,143,173,],[6,6,6,6,6,6,6,6,]),'push':([0,3,57,68,121,129,143,173,],[7,7,7,7,7,7,7,7,]),'funcion':([0,3,57,68,121,129,143,173,],[8,8,8,8,8,8,8,8,]),'array':([0,3,57,68,121,129,143,173,],[9,9,9,9,9,9,9,9,]),'slice':([0,3,57,68,121,129,143,173,],[10,10,10,10,10,10,10,10,]),'mathExpProd':([0,3,44,57,68,121,129,143,173,],[11,11,67,11,11,11,11,11,11,]),'switch':([0,3,57,68,121,129,143,173,],[14,14,14,14,14,14,14,14,]),'pila':([0,3,57,68,121,129,143,173,],[15,15,15,15,15,15,15,15,]),'func_declaration':([0,3,57,68,121,129,143,173,],[16,16,16,16,16,16,16,16,]),'retorno':([0,3,22,57,68,121,129,143,173,],[17,17,42,17,17,17,17,17,17,]),'declaration':([0,3,57,68,121,129,143,173,],[18,18,18,18,18,18,18,18,]),'mathExp':([0,3,44,57,68,121,129,143,173,],[23,23,23,23,23,23,23,23,23,]),'number':([0,3,44,52,57,68,93,112,121,123,129,137,143,147,173,],[27,27,27,73,27,27,109,125,27,135,27,125,27,135,27,]),'expression':([20,],[34,]),'value':([21,30,65,101,133,],[38,54,87,87,145,]),'operator':([23,27,],[44,52,]),'comparator':([35,],[60,]),'statements':([59,98,127,],[78,115,139,]),'statement':([59,98,127,],[79,79,79,]),'param_list':([65,],[84,]),'param':([65,101,],[86,118,]),'return_types':([102,],[120,]),'elemSlice':([112,137,],[124,148,]),'elemArray':([123,147,],[134,156,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> repeatLines','program',1,'p_program','sintactico.py',8),
  ('value -> INT','value',1,'p_value','sintactico.py',12),
  ('value -> FLOAT','value',1,'p_value','sintactico.py',13),
  ('value -> STR','value',1,'p_value','sintactico.py',14),
  ('value -> ID','value',1,'p_value','sintactico.py',15),
  ('repeatLines -> line','repeatLines',1,'p_repeatLines','sintactico.py',20),
  ('repeatLines -> line repeatLines','repeatLines',2,'p_repeatLines','sintactico.py',21),
  ('line -> ID EQUALSVAR value','line',3,'p_line','sintactico.py',28),
  ('line -> stamentFor','line',1,'p_line','sintactico.py',29),
  ('line -> consulta','line',1,'p_line','sintactico.py',30),
  ('line -> push','line',1,'p_line','sintactico.py',31),
  ('line -> funcion','line',1,'p_line','sintactico.py',32),
  ('line -> array','line',1,'p_line','sintactico.py',33),
  ('line -> slice','line',1,'p_line','sintactico.py',34),
  ('line -> mathExpProd','line',1,'p_line','sintactico.py',35),
  ('line -> CASE INT TWODOTS line','line',4,'p_line','sintactico.py',36),
  ('line -> switch','line',1,'p_line','sintactico.py',37),
  ('line -> pila','line',1,'p_line','sintactico.py',38),
  ('line -> func_declaration','line',1,'p_line','sintactico.py',39),
  ('line -> ID EQUALSVAR INT','line',3,'p_line','sintactico.py',40),
  ('line -> retorno','line',1,'p_line','sintactico.py',41),
  ('line -> declaration','line',1,'p_line','sintactico.py',42),
  ('retorno -> ID','retorno',1,'p_retorno','sintactico.py',49),
  ('retorno -> ID COMMA','retorno',2,'p_retorno','sintactico.py',50),
  ('retorno -> RETURN retorno','retorno',2,'p_retorno','sintactico.py',51),
  ('expression -> ID comparator ID','expression',3,'p_expression','sintactico.py',56),
  ('expression -> ID comparator INT','expression',3,'p_expression','sintactico.py',57),
  ('expression -> ID','expression',1,'p_expression','sintactico.py',58),
  ('comparator -> COMPARE','comparator',1,'p_comparator','sintactico.py',63),
  ('comparator -> MORETHAN','comparator',1,'p_comparator','sintactico.py',64),
  ('comparator -> MINUSTHAN','comparator',1,'p_comparator','sintactico.py',65),
  ('operator -> DIVIDE','operator',1,'p_operator','sintactico.py',70),
  ('operator -> MINUS','operator',1,'p_operator','sintactico.py',71),
  ('operator -> PLUS','operator',1,'p_operator','sintactico.py',72),
  ('operator -> TIMES','operator',1,'p_operator','sintactico.py',73),
  ('stamentFor -> FOR ID EQUALS INT DOTCOMA ID MINUSTHAN LEN LPAREN ID RPAREN DOTCOMA ID PLUS PLUS LCURLY repeatLines RCURLY','stamentFor',18,'p_stamentFor','sintactico.py',83),
  ('switch -> SWITCH ID LCURLY repeatLines RCURLY','switch',5,'p_switch','sintactico.py',91),
  ('consulta -> IF expression LCURLY statements RCURLY','consulta',5,'p_consulta','sintactico.py',101),
  ('consulta -> IF expression LCURLY statements RCURLY ELSE LCURLY statements RCURLY','consulta',9,'p_consultaIfElse','sintactico.py',106),
  ('statements -> statement','statements',1,'p_statements','sintactico.py',110),
  ('statements -> statement COMMA statements','statements',3,'p_statements','sintactico.py',111),
  ('statement -> ID','statement',1,'p_statement','sintactico.py',116),
  ('number -> INT','number',1,'p_number','sintactico.py',121),
  ('number -> FLOAT','number',1,'p_number','sintactico.py',122),
  ('array -> ID EQUALSVAR LBRACKETS INT RBRACKETS ID LCURLY elemArray RCURLY','array',9,'p_array','sintactico.py',132),
  ('elemArray -> number','elemArray',1,'p_elemArray','sintactico.py',137),
  ('elemArray -> number COMMA elemArray','elemArray',3,'p_elemArray','sintactico.py',138),
  ('slice -> ID EQUALSVAR LBRACKETS RBRACKETS ID LCURLY elemSlice RCURLY','slice',8,'p_slice','sintactico.py',145),
  ('elemSlice -> number','elemSlice',1,'p_elemSlice','sintactico.py',150),
  ('elemSlice -> number COMMA elemSlice','elemSlice',3,'p_elemSlice','sintactico.py',151),
  ('pila -> TYPE STACK LBRACKETS RBRACKETS ID','pila',5,'p_pila','sintactico.py',159),
  ('pila -> TYPE STACK INTERFACE LCURLY RCURLY','pila',5,'p_pila','sintactico.py',160),
  ('pila -> TYPE STACK STRUCT LCURLY ID LBRACKETS RBRACKETS value RCURLY','pila',9,'p_pila','sintactico.py',161),
  ('push -> FUNC PUSH LPAREN ID STACK COMMA ID ID RPAREN STACK LCURLY RETURN APPEND LPAREN ID COMMA ID RPAREN RCURLY','push',19,'p_push','sintactico.py',167),
  ('funcion -> FUNC value LPAREN RPAREN ID LCURLY repeatLines RETURN ID RCURLY','funcion',10,'p_funcionSinPar','sintactico.py',177),
  ('func_declaration -> FUNC ID LPAREN RPAREN LPAREN return_types RPAREN LCURLY repeatLines RCURLY','func_declaration',10,'p_func_declaration','sintactico.py',185),
  ('return_types -> ID COMMA ID','return_types',3,'p_return_types','sintactico.py',191),
  ('return_types -> ID','return_types',1,'p_return_types','sintactico.py',192),
  ('funcion -> FUNC ID LPAREN param_list RPAREN ID LCURLY repeatLines RETURN ID RCURLY','funcion',11,'p_function','sintactico.py',200),
  ('param_list -> param','param_list',1,'p_param_list','sintactico.py',204),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','sintactico.py',205),
  ('param -> value ID','param',2,'p_param','sintactico.py',210),
  ('declaration -> VAR ID ID','declaration',3,'p_declaration','sintactico.py',235),
  ('declaration -> VAR ID ID EQUALSVAR number','declaration',5,'p_declaration','sintactico.py',236),
  ('declaration -> VAR ID ID EQUALSVAR STR','declaration',5,'p_declaration','sintactico.py',237),
  ('mathExp -> number','mathExp',1,'p_mathExp','sintactico.py',243),
  ('mathExp -> number operator number','mathExp',3,'p_mathExp','sintactico.py',244),
  ('mathExpProd -> mathExp','mathExpProd',1,'p_mathExpProd','sintactico.py',249),
  ('mathExpProd -> mathExp operator mathExpProd','mathExpProd',3,'p_mathExpProd','sintactico.py',250),
]
